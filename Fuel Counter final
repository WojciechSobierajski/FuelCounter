import tkinter as tk
from tkinter import *
import openpyxl as xl
from Functions import FunctionsForFuelCounter
import os

# Beginning
question = ""


#1st window - asks for a user name
def closing():
    root.destroy()


root = tk.Tk()
nameget = StringVar()
root.title('Fuel Calculator by Wojciech Sobierajski')
root.iconbitmap('C:/WSFuelCounter/WSfuelicon.ico')
tk.Label(root, text="What's your name?", font=25).grid(column=1, row=1)
tk.Entry(root, width=15, textvariable=nameget).grid(column=1, row=2)
tk.Button(root, text='Next', command=closing, font=25).grid(column=1, row=3)

root.mainloop()


#This part check if the file already exists
name = nameget.get()
def does(filePathAndName):
    return os.path.exists(filePathAndName)

#If exists, file opens, if not - creates a new file based on the template xlsx file.
if does(f"C:/WSFuelCounter/{name}.xlsx"):
    wb = xl.load_workbook(f'{name}.xlsx')
    sheet = wb['Calculation']
    cell = sheet.cell(sheet.max_row, 2)
    car_distance = cell.value
else:
    wb = xl.load_workbook('TemplateForFuelCounter.xlsx')
    sheet = wb['Calculation']
    wb.save(f'{name}.xlsx')
    wb = xl.load_workbook(f'{name}.xlsx')
    sheet = wb['Calculation']
    car_distance = 0


print(f'Hey {name}, welcome to my Fuel Counter! Have fun and calculate.')
#Looping the function and gathering data from user
while question != 'yes':
    def closing():
        root.destroy()


    root = tk.Tk()
    root.title('Fuel Calculator by Wojciech Sobierajski')
    root.iconbitmap('C:/WSFuelCounter/WSfuelicon.ico')
    current_distance = StringVar()
    current_liters = StringVar()
    current_price = StringVar()

    label = tk.Label(root, font=25, text=f'Welcome {name}').grid(row=10, column=1)
    tk.Label(root, font=25, text=f'Current state of odometer     Your car distance: {car_distance}').grid(sticky='w', column=2, row=1)
    tk.Label(root, font=25, text='Price of 1 liter ').grid(sticky='w', column=2, row=2)
    tk.Label(root, font=25, text='How much liters did you fill? ').grid(sticky='w', column=2, row=3)
    tk.Entry(root, font=25, width=6, textvariable=current_distance).grid(sticky='w', column=1, row=1, padx=10, pady=10)
    tk.Entry(root, font=25, width=4, textvariable=current_liters).grid(sticky='w', column=1, row=3, padx=10, pady=10)
    tk.Entry(root, font=25, width=4, textvariable=current_price).grid(sticky='w', column=1, row=2, padx=10, pady=10)
    button = tk.Button(root, font=25, fg='red', text='Click to continue', command=closing).grid(column=5, row=4)
    root.mainloop()
    # calculation (in a first step, converts any inaccuracy with formatting
    current_price = current_price.get()
    current_price = current_price.replace(',', '.')
    current_liters = current_liters.get()
    current_liters = current_liters.replace(',', '.')

    distance_driven = int(current_distance.get()) - int(car_distance)
    total_cost = round(float(current_price) * float(current_liters), 2)
    fuel_consumption = round((float(current_liters) / float(distance_driven) * 100), 2)
    cost_100km = round(float(fuel_consumption * float(current_price)), 2)
    car_distance = int(car_distance) + int(distance_driven)
    score_tk = FunctionsForFuelCounter.displaying_validation_tk(fuel_consumption)
    # Executing fuctions (creates the data base and displays the output)
    FunctionsForFuelCounter.filling_excel(sheet, wb, name, current_distance.get(), current_price,
                                              distance_driven, total_cost, current_liters, fuel_consumption,
                                              cost_100km)
    FunctionsForFuelCounter.displaying_Tkinter_Input(car_distance, distance_driven, total_cost,
                                                   fuel_consumption, score_tk)
